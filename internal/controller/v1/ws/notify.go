package ws

import (
	"encoding/json"
	"github.com/gin-gonic/gin"
	"github.com/zzpu/mynahs/internal/controller"
	"io"
	"net/http"
)

type NotifyController struct {
	controller.Api
}

func NewNotifyController() *NotifyController {
	return &NotifyController{}
}

// HelloWorld hello world
func (api *NotifyController) Notify(c *gin.Context) {
	str, ok := c.GetQuery("msg")
	if !ok {
		WebsocketManager.SendAll([]byte("收到非法消息"))
	}
	_, ok = c.GetQuery("weather")
	if ok {
		res, err := http.Get("http://www.weather.com.cn/data/sk/101281201.html")
		if err == nil {
			defer res.Body.Close()
			b, err := io.ReadAll(res.Body)
			if err == nil {
				var au AutoGenerated
				err = json.Unmarshal(b, &au)
				if err == nil {
					str += "现在温度是" + au.Weatherinfo.Temp + "度，相对湿度" + au.Weatherinfo.SD
				}
			}

		}

	}
	WebsocketManager.SendAll([]byte(str))
	api.Success(c, "success")
}

type AutoGenerated struct {
	Weatherinfo struct {
		City    string `json:"city"`
		Cityid  string `json:"cityid"`
		Temp    string `json:"temp"`
		WD      string `json:"WD"`
		WS      string `json:"WS"`
		SD      string `json:"SD"`
		AP      string `json:"AP"`
		Njd     string `json:"njd"`
		WSE     string `json:"WSE"`
		Time    string `json:"time"`
		Sm      string `json:"sm"`
		IsRadar string `json:"isRadar"`
		Radar   string `json:"Radar"`
	} `json:"weatherinfo"`
}
